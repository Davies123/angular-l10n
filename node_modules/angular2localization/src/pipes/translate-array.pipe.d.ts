/**
 * ANGULAR 2 LOCALIZATION
 * An Angular 2 library to translate messages, dates and numbers.
 * Written by Roberto Simonetti.
 * MIT license.
 * https://github.com/robisim74/angular2localization
 */
import { PipeTransform } from '@angular/core';
import { LocaleNumber } from '../services/locale-number';
import { LocaleService } from '../services/locale.service';
import { LocalizationService } from '../services/localization.service';
/**
 * 'translatearray' pipe function.
 */
export declare class TranslateArrayPipe extends LocaleNumber implements PipeTransform {
    locale: LocaleService;
    localization: LocalizationService;
    static ALIASES: {
        [key: string]: String;
    };
    /**
     * The language code for TranslateArrayPipe.
     */
    private languageCode;
    /**
     * The currency code for TranslateArrayPipe.
     */
    private currencyCode;
    /**
     * The default locale for TranslateArrayPipe.
     */
    private defaultLocale;
    /**
     * The stored list of TranslateArrayPipe.
     */
    private storedList;
    /**
     * The translated list.
     */
    private translatedList;
    /**
     * Sorting key.
     */
    private keyName;
    /**
     * 'asc' or 'desc'.
     */
    private order;
    /**
     * The value to search for.
     */
    private search;
    constructor(locale: LocaleService, localization: LocalizationService);
    /**
     * TranslateArrayPipe transform method.
     *
     * @param list An array of objects or an array of arrays
     * @param args Params in Json format
     * @param keyName Sorting key. Not yet implemented
     * @param order 'asc' or 'desc'. Not yet implemented
     * @param search The value to search for. Not yet implemented
     * @return A new localized list
     */
    transform(list: Array<any>, args: any, keyName?: any, order?: string, search?: string): Array<any>;
    private supports(obj);
    private tranlate(workList, key);
    private toLocaleDate(workList, key, pattern?);
    private toLocaleDecimal(workList, key, digits?);
    private toLocalePercent(workList, key, digits?);
    private toLocaleCurrency(workList, key, symbolDisplay?, digits?);
    private compare(x, y);
    private deepCopy(x);
}
