/**
 * ANGULAR 2 LOCALIZATION
 * An Angular 2 library to translate messages, dates and numbers.
 * Written by Roberto Simonetti.
 * MIT license.
 * https://github.com/robisim74/angular2localization
 */
import { PipeTransform } from '@angular/core';
import { NumberFormatStyle } from '@angular/common/src/facade/intl';
import { LocaleService } from '../services/locale.service';
/**
 * LocaleNumber superclass.
 */
export declare class LocaleNumber {
    constructor();
    static format(defaultLocale: string, value: number, style: NumberFormatStyle, digits: string, currency?: string, currencyAsSymbol?: boolean): string;
}
/**
 * 'localedecimal' pipe function.
 */
export declare class LocaleDecimalPipe extends LocaleNumber implements PipeTransform {
    locale: LocaleService;
    /**
     * The default locale for LocaleDecimalPipe.
     */
    private defaultLocale;
    /**
     * The value of LocaleDecimalPipe.
     */
    private value;
    /**
     * The locale decimal for the value.
     */
    private localeDecimal;
    constructor(locale: LocaleService);
    /**
     * LocaleDecimalPipe transform method.
     *
     * @param value The number to be localized
     * @param digits The format of the number
     * @return The locale decimal
     */
    transform(value: any, digits?: string): string;
}
/**
 * 'localepercent' pipe function.
 */
export declare class LocalePercentPipe extends LocaleNumber implements PipeTransform {
    locale: LocaleService;
    /**
     * The default locale for LocalePercentPipe.
     */
    private defaultLocale;
    /**
     * The value of LocalePercentPipe.
     */
    private value;
    /**
     * The locale percent for the value.
     */
    private localePercent;
    constructor(locale: LocaleService);
    /**
     * LocalePercentPipe transform method.
     *
     * @param value The number to be localized
     * @param digits The format of the number
     * @return The locale percent
     */
    transform(value: any, digits?: string): string;
}
/**
 * 'localecurrency' pipe function.
 */
export declare class LocaleCurrencyPipe extends LocaleNumber implements PipeTransform {
    locale: LocaleService;
    /**
     * The currency code for LocaleCurrencyPipe.
     */
    private currencyCode;
    /**
     * The default locale for LocaleCurrencyPipe.
     */
    private defaultLocale;
    /**
     * The value of LocaleCurrencyPipe.
     */
    private value;
    /**
     * The locale currency for the value.
     */
    private localeCurrency;
    constructor(locale: LocaleService);
    /**
     * LocaleCurrencyPipe transform method.
     *
     * @param value The number to be localized
     * @param symbolDisplay Indicates whether to use the currency symbol
     * @param digits The format of the number
     * @return The locale currency
     */
    transform(value: any, symbolDisplay?: boolean, digits?: string): string;
}
