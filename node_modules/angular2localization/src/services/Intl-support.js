/**
 * ANGULAR 2 LOCALIZATION
 * An Angular 2 library to translate messages, dates and numbers.
 * Written by Roberto Simonetti.
 * MIT license.
 * https://github.com/robisim74/angular2localization
 */
System.register([], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var IntlSupport;
    return {
        setters:[],
        execute: function() {
            /**
             * IntlSupport class.
             *
             * @author Roberto Simonetti
             */
            IntlSupport = (function () {
                function IntlSupport() {
                }
                /**
                 * Support for dates.
                 *
                 * @param defaultLocale The default locale
                 * @return True if the browser supports locales for dates, otherwise false.
                 */
                IntlSupport.DateTimeFormat = function (defaultLocale) {
                    // Checking for support.
                    try {
                        new Intl.DateTimeFormat(defaultLocale).format(new Date());
                    }
                    catch (e) {
                        return false;
                    }
                    return true;
                };
                /**
                 * Support for numbers.
                 *
                 * @param defaultLocale The default locale
                 * @return True if the browser supports locales for numbers, otherwise false.
                 */
                IntlSupport.NumberFormat = function (defaultLocale) {
                    // Checking for support.
                    try {
                        var n = 0;
                        new Intl.NumberFormat(defaultLocale).format(n);
                    }
                    catch (e) {
                        return false;
                    }
                    return true;
                };
                /**
                 * Support for Collator.
                 *
                 * @param lang The current language code
                 * @return True if the browser supports Collator, otherwise false.
                 */
                IntlSupport.Collator = function (lang) {
                    // Checking for support.
                    try {
                        new Intl.Collator(lang);
                    }
                    catch (e) {
                        return false;
                    }
                    return true;
                };
                return IntlSupport;
            }());
            exports_1("IntlSupport", IntlSupport);
        }
    }
});
